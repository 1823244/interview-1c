Задача.
Найти все места, которые можно улучшить (оптимизировать, исправить)

1. Запрос.Текст = "ВЫБРАТЬ
Всегда пишем ВЫБРАТЬ РАЗРЕШЕННЫЕ, чтобы не получить ошибку при включении РЛС

2. Конкатенация
ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Договор с номером """+Строка.НомерДоговора+""" уже существует ("+Результат[0].Ссылка+")!");
Всегда используем СтрШаблон(), т.к. код становится более читаемым.  
Но это медленнее.
Проверяем
Код для консоли:
```
нач = ТекущаяУниверсальнаяДатаВМиллисекундах();
а = "";
для сч = 1 по 1000000 цикл
	//а = "" + "текст1"+"ТЕкст2"+"Текст3";
	а = СтрШаблон(" %1 %2 %3", "текст1","ТЕкст2","Текст3" );
КонецЦикла;
кон = ТекущаяУниверсальнаяДатаВМиллисекундах();
сообщить(кон-нач);
```
Результаты:
1 000 000 итераций на одном и том же компьютере:
Время
Конкатенация через "+": 1000 мс  
Конкатенация через СтрШаблон(): 1500 мс  
Хуже на 50%  

Расход памяти (пустая конфигурация, без метаданных вообще)  :
Конкатенация через "+": 0,6 МБ 
Конкатенация через СтрШаблон(): 0,6 МБ

2.1 СтрСоединить()  
https://its.1c.ru/db/v8std/content/782/hdoc  
При массовых(*) операциях конкатенации строк следует использовать методы платформы СтрРазделить и СтрСоединить.  
Например, неправильно:  
```
Для НомерКолонки = 1 По Макет.ШиринаТаблицы Цикл
  ИзвлеченныйТекст = ИзвлеченныйТекст + Символы.ПС + ТекстОбласти;
  …
```
Правильно:  
```
ИзвлеченныеТексты = Новый Массив;  
Для НомерКолонки = 1 По Макет.ШиринаТаблицы Цикл  
  ИзвлеченныеТексты.Добавить(ТекстОбласти);  
  …  
ИзвлеченныйТекст = СтрСоединить(ИзвлеченныеТексты, Символы.ПС);  
```
Такая обработка данных не только быстрее выполняется, но и приводит к снижению потребления оперативной памяти.  
* Примечание: следует ориентироваться на 1000 операций конкатенации строк и более  

Тестирование
```
нач = ТекущаяУниверсальнаяДатаВМиллисекундах();
а = "";
м = новый массив;
для сч = 1 по 1000000 цикл
	//а = "" + "текст1"+"ТЕкст2"+"Текст3";
	//a = СтрШаблон(" %1 %2 %3", "текст1","ТЕкст2","Текст3" );
	м.добавить("текст1");
	м.добавить("текст2");
	м.добавить("текст3");
	а = СтрСоединить(м);
  м.очистить();
КонецЦикла;

кон = ТекущаяУниверсальнаяДатаВМиллисекундах();
сообщить(кон-нач);
```
Время: 2000 мс
Расход памяти: 0,9 МБ


3. Запрос в цикле
(Вообще все запросы надо убирать из цикла!!! Но есть нюанс, см. пункт 10)
Поиск уже существующего документа.
Решение.
Вариант 1.
Вынести запрос из цикла - создавать ТЗ, так называемый "Кэш"
ТЗ индексировать
// предположим, что Источник - это ТЗ.
// нужно получить массив из колонки НомерДоговора
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	скДСП.Ссылка КАК Ссылка, 
                   |	скДСП.Номер КАК Номер
		               |ИЗ
		               |	Документ.скДСП КАК скДСП
		               |ГДЕ
		               |	скДСП.Номер В (&Номер)"; // было условие на равно "="
		Запрос.УстановитьПараметр("Номер", Источник.ВыгрузитьКолонку("НомерДоговора"));
		Кэш = Запрос.Выполнить().Выгрузить();
    Кэш.Индексы.Добавить("Номер");
  // и далее в цикле ищем по этой ТЗ  

Про поиск в ТЗ:
https://its.1c.ru/db/v8std#content:452:hdoc

Вариант 2.
Параметр Источник превращаем в ТЗ (типизированную)
Помещаем ее в запрос
и делаем left join

          ВЫБРАТЬ
           ТЗ.НомерДоговора,
          ПОМЕСТИТЬ ВТ1
          ИЗ
           &ТЗ КАК ТЗ
          ИНДЕКСИРОВАТЬ ПО
           ТЗ.НомерДоговора
;
// скДСП.Ссылка IS NULL - выбираем только то, чего нет в базе
		Запрос.Текст = "ВЫБРАТЬ
		               |	скДСП.Ссылка КАК Ссылка
		               |ИЗ
		               |	ВТ1 КАК ВТ1
                   |	Left join Документ.скДСП КАК скДСП
                   |	ПО скДСП.Номер = ВТ1.НомерДоговора
		               |ГДЕ
		               |	скДСП.Ссылка IS NULL";

Вариант 3.
Если надо сообщить пользователю, какие документы уже есть в базе,
нужно дополнить вариант 2 еще одним запросом
с таким условием:
	НЕ скДСП.Ссылка IS NULL
  
		Запрос.Текст = "ВЫБРАТЬ
		               |	скДСП.Ссылка КАК Ссылка
		               |ИЗ
		               |	ВТ1 КАК ВТ1
                   |	Left join Документ.скДСП КАК скДСП
                   |	ПО скДСП.Номер = ВТ1.НомерДоговора
		               |ГДЕ
		               |	НЕ скДСП.Ссылка IS NULL";
и сделать цикл по этому результату с выводом сообщения

Вариант 4.
Продолжение варианта 2.
К таблице Источник, которую поместили в запрос,
делаем left join всех справочников и документов, которые изначально искали в цикле, например:
    НовыйДоговор.СтраховойПродукт = Справочники.скСтраховыеПродукты.НайтиПоНаименованию(Строка.ПрограммаСтрахования);
Можно заменить на:
    Left Join Справочники.скСтраховыеПродукты КАК спрСкСтрПрод
    ПО спрСкСтрПрод.Наименование = ТЗ.ПрограммаСтрахования
И добавить в секцию ВЫБРАТЬ:
ВЫБРАТЬ
    ....
    спрСкСтрПрод.Ссылка КАК СтраховойПродукт
И далее в цикле:    
    НовыйДоговор.СтраховойПродукт = Выборка.СтраховойПродукт;
    
4. Поиск в цикле одного и того же элемента:
//Вспомогательное
		НовыйДоговор.Контрагент = Строка.Страхователь;
		НовыйДоговор.Продавец = Справочники.Контрагенты.НайтиПоНаименованию("РОССЕЛЬХОЗБАНК АО");
Нужно вынести за цикл.

5. Длинное выражение ЕСЛИ:
Если НРег(Строка.СтатусДоговора) = "проект" Тогда
			НовыйДоговор.скСтатусБСО = ПредопределенноеЗначение("Перечисление.рсхб_СтатусыДоговоровСтрахования.Проект");
Решение. Вынести в функцию

6. Проверить формат даты
    НовыйДоговор.Дата = Дата(Сред(Строка.ДатаЗаключенияДоговора,7,4)+Сред(Строка.ДатаЗаключенияДоговора,4,2)+ЛЕВ(Строка.ДатаЗаключенияДоговора,2));
Если там 2020-05-21, то использовать метод XMLЗначение(Тип("Дата"), 
    НовыйДоговор.Дата = XMLЗначение(Тип("Дата"), Строка.ДатаЗаключенияДоговора);

7. ПараметрыОтбора = Новый Структура;
Вынести за цикл

8. ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка")
Если точно известно, что в конфигурации есть этот справочник, то можно проще:
    Справочник.Контрагенты.ПустаяСсылка()

нач = ТекущаяУниверсальнаяДатаВМиллисекундах();
а = Неопределено;
для сч = 1 по 1000000 цикл
	а = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
КонецЦикла;
кон = ТекущаяУниверсальнаяДатаВМиллисекундах();
сообщить(кон-нач);

Время 4400 мс

Меняем на:
   а = Справочники.Контрагенты.ПустаяСсылка();
Время 3400 мс

Выигрыш = 25%

9. Замена Если на поиск в Соответствии

Если НРег(Строка.СтатусДоговора) = "проект" Тогда
			НовыйДоговор.скСтатусБСО = ПредопределенноеЗначение("Перечисление.рсхб_СтатусыДоговоровСтрахования.Проект");
      
Создать Соответствие, где ключ - это значение из колонки СтатусДоговора, а значение - Перечисление.рсхб_СтатусыДоговоровСтрахования      
Дальше просто
  НовыйДоговор.скСтатусБСО = Соответствие[Строка.СтатусДоговора];
  
ВАЖНО! case sesitive!!!

тест

```
нач = ТекущаяУниверсальнаяДатаВМиллисекундах();
а = "тест";
б = 0;
для сч = 1 по 1000000 цикл
	
	Если а = "фывафывад" тогда
		б = 1;
	ИначеЕсли а = "65465456" тогда
		б = 2;
	ИначеЕсли а = "тест" тогда
		б = 3;
	КонецЕсли;
	
КонецЦикла;
кон = ТекущаяУниверсальнаяДатаВМиллисекундах();
сообщить(кон-нач);
```
Время 6500 мс

используем соответствие
```

нач = ТекущаяУниверсальнаяДатаВМиллисекундах();
мэп = Новый Соответствие;
мэп.Вставить("фывафывад", 1);
мэп.Вставить("65465456", 2);
мэп.Вставить("тест", 3);
а = "тест";
б = 0;
для сч = 1 по 1000000 цикл
	
	б = мэп[а];
	
КонецЦикла;
кон = ТекущаяУниверсальнаяДатаВМиллисекундах();
сообщить(кон-нач);
```

Время 3200 мс

Выигрыш = 50%

10. Своя нумерация
Запрос на МАКСИМУМ без условий - довольно тяжелый для СУБД

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	МАКСИМУМ(скДСП.юж_НомерЗаявления) КАК юж_НомерЗаявления
		|ИЗ
		|	Документ.скДСП КАК скДСП";
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Попытка
				Результат = Формат(Число(Выборка.юж_НомерЗаявления) + 1, "ЧЦ=6; ЧВН=; ЧГ=0");
			Исключение
			КонецПопытки;	
		КонецЕсли;	
		
		НовыйДоговор.юж_НомерЗаявления = Результат;
		
Решение: выполнить запрос вне цикла 1 раз, а дальше хранить переменную в памяти. И ее обновлять.		

11. ОбщегоНазначенияКлиентСервер.СообщитьПользователю()
Заменить на запись в лог файл.
Опционально, показывать протокол (этот лог файл) после завершения загрузки
Это будет быстрее, чем вывод сообщения пользователю.

12. Если НЕ Строка.ССВВалютеДоговораПоРискуДожития1Год = "" Тогда
Отрефакторить.
Однотипные куски кода вынести в отдельный метод.
Это повысит читабельность.

13. Возможно что-то еще



/////////////////////////////////////////////////////////////////////////////////////////////////////

Процедура СозданиеДоговоровИзДСПВнешнихСистем(Источник, Отказ, РежимПроведения) Экспорт

	НомерСтроки = 1;
	
	Для Каждого Строка Из Источник.ДанныеИзФайла Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	скДСП.Ссылка КАК Ссылка
		               |ИЗ
		               |	Документ.скДСП КАК скДСП
		               |ГДЕ
		               |	скДСП.Номер = &Номер";
		Запрос.УстановитьПараметр("Номер", Строка.НомерДоговора);
		Результат = Запрос.Выполнить().Выгрузить();
		
		Если Результат.Количество() > 0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Договор с номером """+Строка.НомерДоговора+""" уже существует ("+Результат[0].Ссылка+")!");
			Продолжить;
		Иначе
			НовыйДоговор = Документы.скДСП.СоздатьДокумент();
		КонецЕсли;
		
		//Вспомогательное
		НовыйДоговор.Контрагент = Строка.Страхователь;
		НовыйДоговор.Продавец = Справочники.Контрагенты.НайтиПоНаименованию("РОССЕЛЬХОЗБАНК АО");
		НовыйДоговор.Организация = Справочники.Организации.НайтиПоНаименованию("РОССЕЛЬХОЗБАНК АО");
		НовыйДоговор.ПодразделениеОрганизации = Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("Основное подразделение");
		НовыйДоговор.Территория = Справочники.скТерритории.НайтиПоНаименованию("РОССИЯ");	
		//НовыйДоговор.скНачислениеПоГрафику = Истина;
		
		НовыйЗастрахованный = НовыйДоговор.скЗастрахованные.Добавить();
		НовыйЗастрахованный.Контрагент = Строка.Застрахованный;
		UUIDСвязь = новый УникальныйИдентификатор;
		НовыйЗастрахованный.UUID = UUIDСвязь;
		
		//По маппингу
		НовыйДоговор.рсхб_Old_id = Строка.idДоговора;
		НовыйДоговор.Номер = Строка.НомерДоговора;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	скСтраховыеПродукты.Ссылка КАК Ссылка
		               |ИЗ
		               |	Справочник.скСтраховыеПродукты КАК скСтраховыеПродукты
		               |ГДЕ
		               |	скСтраховыеПродукты.Наименование = &Наименование
		               |	И скСтраховыеПродукты.рсхб_КодПродукта = &Код";
		Запрос.УстановитьПараметр("Наименование", Строка.ПрограммаСтрахования);
		Запрос.УстановитьПараметр("Код", Строка.КодПродукта);
		
		Результат = Запрос.Выполнить().Выгрузить();
		
		Если Результат.Количество() > 0 Тогда
			НовыйДоговор.СтраховойПродукт = Результат[0].Ссылка;
		Иначе
			НовыйДоговор.СтраховойПродукт = Справочники.скСтраховыеПродукты.НайтиПоНаименованию(Строка.ПрограммаСтрахования);
		КонецЕсли;
		
		Если НовыйДоговор.СтраховойПродукт = ПредопределенноеЗначение("Справочник.скСтраховыеПродукты.ПустаяСсылка") Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Страховой продукт """+Строка.ПрограммаСтрахования+""" для строки "+НомерСтроки+" в базе не найден!");
		КонецЕсли;
		
		Если НРег(Строка.СтатусДоговора) = "проект" Тогда
			НовыйДоговор.скСтатусБСО = ПредопределенноеЗначение("Перечисление.рсхб_СтатусыДоговоровСтрахования.Проект");
		ИначеЕсли НРег(Строка.СтатусДоговора) = "андеррайтинг" Тогда
			НовыйДоговор.скСтатусБСО = ПредопределенноеЗначение("Перечисление.рсхб_СтатусыДоговоровСтрахования.Андеррайтинг");
		ИначеЕсли НРег(Строка.СтатусДоговора) = "оформлен" Тогда
			НовыйДоговор.скСтатусБСО = ПредопределенноеЗначение("Перечисление.рсхб_СтатусыДоговоровСтрахования.Оформлен");
		ИначеЕсли НРег(Строка.СтатусДоговора) = "действует" Тогда
			НовыйДоговор.скСтатусБСО = ПредопределенноеЗначение("Перечисление.рсхб_СтатусыДоговоровСтрахования.Действует");
		ИначеЕсли НРег(Строка.СтатусДоговора) = "аннулирован" Тогда
			НовыйДоговор.скСтатусБСО = ПредопределенноеЗначение("Перечисление.рсхб_СтатусыДоговоровСтрахования.Аннулирован");
		ИначеЕсли НРег(Строка.СтатусДоговора) = "расторгнут" Тогда
			НовыйДоговор.скСтатусБСО = ПредопределенноеЗначение("Перечисление.рсхб_СтатусыДоговоровСтрахования.Расторгнут");
		ИначеЕсли НРег(Строка.СтатусДоговора) = "прекращениеобязательств" Тогда
			НовыйДоговор.скСтатусБСО = ПредопределенноеЗначение("Перечисление.рсхб_СтатусыДоговоровСтрахования.ПрекращениеОбязательств");
		ИначеЕсли НРег(Строка.СтатусДоговора) = "окончен" Тогда
			НовыйДоговор.скСтатусБСО = ПредопределенноеЗначение("Перечисление.рсхб_СтатусыДоговоровСтрахования.Окончен");
		ИначеЕсли НРег(Строка.СтатусДоговора) = "расторгнутвпериодохлаждения" Тогда
			НовыйДоговор.скСтатусБСО = ПредопределенноеЗначение("Перечисление.рсхб_СтатусыДоговоровСтрахования.РасторгнутВПериодОхлаждения");
		КонецЕсли;
		
		НовыйДоговор.Дата = Дата(Сред(Строка.ДатаЗаключенияДоговора,7,4)+Сред(Строка.ДатаЗаключенияДоговора,4,2)+ЛЕВ(Строка.ДатаЗаключенияДоговора,2));
		НовыйДоговор.ДатаНачалаОтветственности = Дата(Сред(Строка.ДатаНачалаДоговора,7,4)+Сред(Строка.ДатаНачалаДоговора,4,2)+ЛЕВ(Строка.ДатаНачалаДоговора,2));
		НовыйДоговор.ДатаОкончанияОтветственности = Дата(Сред(Строка.ДатаОкончанияДоговора,7,4)+Сред(Строка.ДатаОкончанияДоговора,4,2)+ЛЕВ(Строка.ДатаОкончанияДоговора,2));
		НовыйДоговор.Срок = Строка.СрокДействияДоговора;	
		НовыйДоговор.СуммаДокумента = Строка.ПремияВВалютеДоговора;
		
		Если Строка.ВалютаДоговора = "Рубль" Тогда 
			НовыйДоговор.ВалютаДокумента = Справочники.Валюты.НайтиПоНаименованию("RUR");
		ИначеЕсли Строка.ВалютаДоговора = "Доллар" Тогда
			НовыйДоговор.ВалютаДокумента = Справочники.Валюты.НайтиПоНаименованию("USD");
		ИначеЕсли Строка.ВалютаДоговора = "Евро" Тогда
			НовыйДоговор.ВалютаДокумента = Справочники.Валюты.НайтиПоНаименованию("EUR");
		КонецЕсли;
		НовыйДоговор.рсхб_КурсНаДатуЗаключения = Строка.КурсВалютыДоговораНаДатуЗаключения;
		НовыйДоговор.Премия = Строка.ПремияВВалютеДоговора;

		Если НРег(Строка.ПериодичностьОплатыВзносов) = "единовременно" Тогда
			ЧастотаУплатыСтраховыхВзносов = ПредопределенноеЗначение("Перечисление.скЧастотаУплатыСтраховыхВзносов.Единовременно");
		ИначеЕсли НРег(Строка.ПериодичностьОплатыВзносов) = "ежегодно" Тогда
			ЧастотаУплатыСтраховыхВзносов = ПредопределенноеЗначение("Перечисление.скЧастотаУплатыСтраховыхВзносов.Ежегодно");
		ИначеЕсли НРег(Строка.ПериодичностьОплатыВзносов) = "ежеквартально" Тогда
			ЧастотаУплатыСтраховыхВзносов = ПредопределенноеЗначение("Перечисление.скЧастотаУплатыСтраховыхВзносов.Ежеквартально");
		ИначеЕсли НРег(Строка.ПериодичностьОплатыВзносов) = "ежемесячно" Тогда
			ЧастотаУплатыСтраховыхВзносов = ПредопределенноеЗначение("Перечисление.скЧастотаУплатыСтраховыхВзносов.Ежемесячно");
		ИначеЕсли НРег(Строка.ПериодичностьОплатыВзносов) = "произвольно" Тогда
			ЧастотаУплатыСтраховыхВзносов = ПредопределенноеЗначение("Перечисление.скЧастотаУплатыСтраховыхВзносов.Произвольно");
		ИначеЕсли НРег(Строка.ПериодичностьОплатыВзносов) = "развполугодие" Тогда
			ЧастотаУплатыСтраховыхВзносов = ПредопределенноеЗначение("Перечисление.скЧастотаУплатыСтраховыхВзносов.РазВПолугодие");
		КонецЕсли;
		
		НовыйДоговор.ЧастотаУплатыСтраховыхВзносов = ЧастотаУплатыСтраховыхВзносов;
				
		СтраховойПродуктОбъект = НовыйДоговор.СтраховойПродукт.ПолучитьОбъект();
		СписокРисковПоЗастрахованным = СтраховойПродуктОбъект.ПолучитьСписокРисковПоГруппам();
		
		СписокЭлементарныхРисков = Новый СписокЗначений;
		
		СуммаПлатежа = 0;
		Для Каждого Строчка из СписокРисковПоЗастрахованным Цикл
			НоваяСтрокаРисков = НовыйДоговор.РискиПоЗастрахованным.Добавить();
			НоваяСтрокаРисков.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию(Строчка.Наименование);
			//НоваяСтрокаРисков.юж_ДоговорСтрахования = Строка.НомерДоговора;
			НоваяСтрокаРисков.СтраховаяСумма = НовыйДоговор.СуммаДокумента;
			НоваяСтрокаРисков.Премия = НовыйДоговор.Премия;
			НоваяСтрокаРисков.ПремияБазовая = НовыйДоговор.Премия;
			НоваяСтрокаРисков.РазмерСтраховогоВзноса = НовыйДоговор.Премия;
			Если НовыйДоговор.Срок = 1 Тогда
				НоваяСтрокаРисков.юж_КлассификацияСрока = ПредопределенноеЗначение("Перечисление.юж_КлассификацияСроковСЖ.Один");
			ИначеЕсли НовыйДоговор.Срок = 5 Тогда
				НоваяСтрокаРисков.юж_КлассификацияСрока = ПредопределенноеЗначение("Перечисление.юж_КлассификацияСроковСЖ.Пять");
			ИначеЕсли НовыйДоговор.Срок = "От 1 до 5" Тогда
				НоваяСтрокаРисков.юж_КлассификацияСрока = ПредопределенноеЗначение("Перечисление.юж_КлассификацияСроковСЖ.ОтОдногоДоПяти");
			ИначеЕсли НовыйДоговор.Срок = "Свыше 5" Тогда
				НоваяСтрокаРисков.юж_КлассификацияСрока = ПредопределенноеЗначение("Перечисление.юж_КлассификацияСроковСЖ.СвышеПяти");
			КонецЕсли;
				
			НоваяСтрокаРисков.юж_ПериодичностьСтраховыхВыплат = ЧастотаУплатыСтраховыхВзносов;
			НоваяСтрокаРисков.Периодичность = ЧастотаУплатыСтраховыхВзносов;
			НоваяСтрокаРисков.юж_СрокУплатыВзносов = 1;
			НоваяСтрокаРисков.UUID = UUIDСвязь;
			
			
			НоваяСтрокаОбъектыИРиски = НовыйДоговор.ОбъектыИРиски.Добавить();
			НоваяСтрокаОбъектыИРиски.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию(Строчка.Наименование);
			НоваяСтрокаОбъектыИРиски.Валюта = НовыйДоговор.ВалютаДокумента;
			НоваяСтрокаОбъектыИРиски.СтраховаяСумма = НовыйДоговор.СуммаДокумента;
			НоваяСтрокаОбъектыИРиски.Премия = НовыйДоговор.Премия;
			НоваяСтрокаОбъектыИРиски.ПремияБазовая = НовыйДоговор.Премия;
			НоваяСтрокаОбъектыИРиски.ДатаНачалаОтветственности = НовыйДоговор.ДатаНачалаОтветственности;
			НоваяСтрокаОбъектыИРиски.Срок = НовыйДоговор.Срок*365;
			НоваяСтрокаОбъектыИРиски.ДатаОкончанияОтветственности = НовыйДоговор.ДатаОкончанияОтветственности;
			НоваяСтрокаОбъектыИРиски.ОбъектСтрахования = ПредопределенноеЗначение("Справочник.скОбъектыСтрахования.ЗастрахованныеЛица");
			СуммаПлатежа = СуммаПлатежа + НоваяСтрокаОбъектыИРиски.СтраховаяСумма;

			Для Каждого Стр Из Строчка.ЭлементарныеРиски Цикл
				СписокЭлементарныхРисков.Добавить(Стр.Риск.Наименование);
			КонецЦикла;
			
		КонецЦикла;	
		
		НоваяСтрокаПлатежа = НовыйДоговор.ГрафикПлатежей.Добавить();
		НоваяСтрокаПлатежа.Страхователь = Строка.Страхователь;
		НоваяСтрокаПлатежа.ДатаНачалаОтветственности = Дата(Сред(Строка.ДатаНачалаПериодаОплатыВзносов,7,4)+Сред(Строка.ДатаНачалаПериодаОплатыВзносов,4,2)+ЛЕВ(Строка.ДатаНачалаПериодаОплатыВзносов,2));
		НоваяСтрокаПлатежа.ДатаГрафика = Дата(Сред(Строка.ДатаНачалаПериодаОплатыВзносов,7,4)+Сред(Строка.ДатаНачалаПериодаОплатыВзносов,4,2)+ЛЕВ(Строка.ДатаНачалаПериодаОплатыВзносов,2));
		НоваяСтрокаПлатежа.НомерЭтапа = 1;
		НоваяСтрокаПлатежа.Сумма = СуммаПлатежа;
		
		Если НЕ Строка.ССВВалютеДоговораПоРискуДожития1Год = "" Тогда
			НоваяСтрокаВыплат = НовыйДоговор.скПериодическиеВыплаты.Добавить();
			НоваяСтрокаВыплат.Валюта = НовыйДоговор.ВалютаДокумента;
			НоваяСтрокаВыплат.Получатель = Справочники.Контрагенты.НайтиПоНаименованию(Строка.Застрахованный);
			НоваяСтрокаВыплат.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
			НоваяСтрокаВыплат.Сумма = Строка.ССВВалютеДоговораПоРискуДожития1Год;
			НоваяСтрокаВыплат.Дата = Дата(Сред(Строка.ДатаДожития1Год,7,4)+Сред(Строка.ДатаДожития1Год,4,2)+ЛЕВ(Строка.ДатаДожития1Год,2));
		КонецЕсли;
		
		Если НЕ Строка.ССВВалютеДоговораПоРискуДожития2Года = "" Тогда
			НоваяСтрокаВыплат = НовыйДоговор.скПериодическиеВыплаты.Добавить();
			НоваяСтрокаВыплат.Валюта = НовыйДоговор.ВалютаДокумента;
			НоваяСтрокаВыплат.Получатель = Справочники.Контрагенты.НайтиПоНаименованию(Строка.Застрахованный);
			НоваяСтрокаВыплат.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
			НоваяСтрокаВыплат.Сумма = Строка.ССВВалютеДоговораПоРискуДожития2Года;
			НоваяСтрокаВыплат.Дата = Дата(Сред(Строка.ДатаДожития2Года,7,4)+Сред(Строка.ДатаДожития2Года,4,2)+ЛЕВ(Строка.ДатаДожития2Года,2));
		КонецЕсли;

		
		Если НЕ Строка.ССВВалютеДоговораПоРискуДожития3Года = "" Тогда
			НоваяСтрокаВыплат = НовыйДоговор.скПериодическиеВыплаты.Добавить();
			НоваяСтрокаВыплат.Валюта = НовыйДоговор.ВалютаДокумента;
			НоваяСтрокаВыплат.Получатель = Справочники.Контрагенты.НайтиПоНаименованию(Строка.Застрахованный);
			НоваяСтрокаВыплат.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
			НоваяСтрокаВыплат.Сумма = Строка.ССВВалютеДоговораПоРискуДожития3Года;
			НоваяСтрокаВыплат.Дата = Дата(Сред(Строка.ДатаДожития3Года,7,4)+Сред(Строка.ДатаДожития3Года,4,2)+ЛЕВ(Строка.ДатаДожития3Года,2));
		КонецЕсли;

		
		Если НЕ Строка.ССВВалютеДоговораПоРискуДожития4Года = "" Тогда
			НоваяСтрокаВыплат = НовыйДоговор.скПериодическиеВыплаты.Добавить();
			НоваяСтрокаВыплат.Валюта = НовыйДоговор.ВалютаДокумента;
			НоваяСтрокаВыплат.Получатель = Справочники.Контрагенты.НайтиПоНаименованию(Строка.Застрахованный);
			НоваяСтрокаВыплат.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
			НоваяСтрокаВыплат.Сумма = Строка.ССВВалютеДоговораПоРискуДожития4Года;
			НоваяСтрокаВыплат.Дата = Дата(Сред(Строка.ДатаДожития4Года,7,4)+Сред(Строка.ДатаДожития4Года,4,2)+ЛЕВ(Строка.ДатаДожития4Года,2));
		КонецЕсли;

		
		Если НЕ Строка.ССВВалютеДоговораПоРискуДожития5Лет = "" Тогда
			НоваяСтрокаВыплат = НовыйДоговор.скПериодическиеВыплаты.Добавить();
			НоваяСтрокаВыплат.Валюта = НовыйДоговор.ВалютаДокумента;
			НоваяСтрокаВыплат.Получатель = Справочники.Контрагенты.НайтиПоНаименованию(Строка.Застрахованный);
			НоваяСтрокаВыплат.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
			НоваяСтрокаВыплат.Сумма = Строка.ССВВалютеДоговораПоРискуДожития5Лет;
			НоваяСтрокаВыплат.Дата = Дата(Сред(Строка.ДатаДожития5Лет,7,4)+Сред(Строка.ДатаДожития5Лет,4,2)+ЛЕВ(Строка.ДатаДожития5Лет,2));
		КонецЕсли;

		
		Если НЕ Строка.ССВВалютеДоговораПоРискуДожития6Лет = "" Тогда
			НоваяСтрокаВыплат = НовыйДоговор.скПериодическиеВыплаты.Добавить();
			НоваяСтрокаВыплат.Валюта = НовыйДоговор.ВалютаДокумента;
			НоваяСтрокаВыплат.Получатель = Справочники.Контрагенты.НайтиПоНаименованию(Строка.Застрахованный);
			НоваяСтрокаВыплат.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
			НоваяСтрокаВыплат.Сумма = Строка.ССВВалютеДоговораПоРискуДожития6Лет;
			НоваяСтрокаВыплат.Дата = Дата(Сред(Строка.ДатаДожития6Лет,7,4)+Сред(Строка.ДатаДожития6Лет,4,2)+ЛЕВ(Строка.ДатаДожития6Лет,2));
		КонецЕсли;

		
		Если НЕ Строка.ССВВалютеДоговораПоРискуДожития7Лет = "" Тогда
			НоваяСтрокаВыплат = НовыйДоговор.скПериодическиеВыплаты.Добавить();
			НоваяСтрокаВыплат.Валюта = НовыйДоговор.ВалютаДокумента;
			НоваяСтрокаВыплат.Получатель = Справочники.Контрагенты.НайтиПоНаименованию(Строка.Застрахованный);
			НоваяСтрокаВыплат.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
			НоваяСтрокаВыплат.Сумма = Строка.ССВВалютеДоговораПоРискуДожития7Лет;
			НоваяСтрокаВыплат.Дата = Дата(Сред(Строка.ДатаДожития7Лет,7,4)+Сред(Строка.ДатаДожития7Лет,4,2)+ЛЕВ(Строка.ДатаДожития7Лет,2));
		КонецЕсли;

		
		Если НЕ Строка.ССВВалютеДоговораПоРискуДожития8Лет = "" Тогда
			НоваяСтрокаВыплат = НовыйДоговор.скПериодическиеВыплаты.Добавить();
			НоваяСтрокаВыплат.Валюта = НовыйДоговор.ВалютаДокумента;
			НоваяСтрокаВыплат.Получатель = Справочники.Контрагенты.НайтиПоНаименованию(Строка.Застрахованный);
			НоваяСтрокаВыплат.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
			НоваяСтрокаВыплат.Сумма = Строка.ССВВалютеДоговораПоРискуДожития8Лет;
			НоваяСтрокаВыплат.Дата = Дата(Сред(Строка.ДатаДожития8Лет,7,4)+Сред(Строка.ДатаДожития8Лет,4,2)+ЛЕВ(Строка.ДатаДожития8Лет,2));
		КонецЕсли;

		
		Если НЕ Строка.ССВВалютеДоговораПоРискуДожития9Лет = "" Тогда
			НоваяСтрокаВыплат = НовыйДоговор.скПериодическиеВыплаты.Добавить();
			НоваяСтрокаВыплат.Валюта = НовыйДоговор.ВалютаДокумента;
			НоваяСтрокаВыплат.Получатель = Справочники.Контрагенты.НайтиПоНаименованию(Строка.Застрахованный);
			НоваяСтрокаВыплат.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
			НоваяСтрокаВыплат.Сумма = Строка.ССВВалютеДоговораПоРискуДожития9Лет;
			НоваяСтрокаВыплат.Дата = Дата(Сред(Строка.ДатаДожития9Лет,7,4)+Сред(Строка.ДатаДожития9Лет,4,2)+ЛЕВ(Строка.ДатаДожития9Лет,2));
		КонецЕсли;

		
		Если НЕ Строка.ССВВалютеДоговораПоРискуДожития10Лет = "" Тогда
			НоваяСтрокаВыплат = НовыйДоговор.скПериодическиеВыплаты.Добавить();
			НоваяСтрокаВыплат.Валюта = НовыйДоговор.ВалютаДокумента;
			НоваяСтрокаВыплат.Получатель = Справочники.Контрагенты.НайтиПоНаименованию(Строка.Застрахованный);
			НоваяСтрокаВыплат.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
			НоваяСтрокаВыплат.Сумма = Строка.ССВВалютеДоговораПоРискуДожития10Лет;
			НоваяСтрокаВыплат.Дата = Дата(Сред(Строка.ДатаДожития10Лет,7,4)+Сред(Строка.ДатаДожития10Лет,4,2)+ЛЕВ(Строка.ДатаДожития10Лет,2));
		КонецЕсли;

		//Если НЕ Строка.ССВВалютеДоговораПоРискуДожития1Год = "" Тогда 
		//	НоваяСтрокаНачислений = НовыйДоговор.скГрафикНачислений.Добавить();
		//	НоваяСтрокаНачислений.Контрагент = Строка.Страхователь;
		//	НоваяСтрокаНачислений.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
		//	НоваяСтрокаНачислений.ДатаНачисления = Дата(Сред(Строка.ДатаДожития1Год,7,4)+Сред(Строка.ДатаДожития1Год,4,2)+ЛЕВ(Строка.ДатаДожития1Год,2));
		//	НоваяСтрокаНачислений.Сумма = Строка.ССВВалютеДоговораПоРискуДожития1Год;
		//КонецЕсли;
		//
		//Если НЕ Строка.ССВВалютеДоговораПоРискуДожития2Года = "" Тогда 
		//	НоваяСтрокаНачислений = НовыйДоговор.скГрафикНачислений.Добавить();
		//	НоваяСтрокаНачислений.Контрагент = Строка.Страхователь;
		//	НоваяСтрокаНачислений.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
		//	НоваяСтрокаНачислений.ДатаНачисления = Дата(Сред(Строка.ДатаДожития2Года,7,4)+Сред(Строка.ДатаДожития2Года,4,2)+ЛЕВ(Строка.ДатаДожития2Года,2));
		//	НоваяСтрокаНачислений.Сумма = Строка.ССВВалютеДоговораПоРискуДожития2Года;
		//КонецЕсли;

		//Если НЕ Строка.ССВВалютеДоговораПоРискуДожития3Года = "" Тогда 
		//	НоваяСтрокаНачислений = НовыйДоговор.скГрафикНачислений.Добавить();
		//	НоваяСтрокаНачислений.Контрагент = Строка.Страхователь;
		//	НоваяСтрокаНачислений.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
		//	НоваяСтрокаНачислений.ДатаНачисления = Дата(Сред(Строка.ДатаДожития3Года,7,4)+Сред(Строка.ДатаДожития3Года,4,2)+ЛЕВ(Строка.ДатаДожития3Года,2));
		//	НоваяСтрокаНачислений.Сумма = Строка.ССВВалютеДоговораПоРискуДожития3Года;
		//КонецЕсли;

		//Если НЕ Строка.ССВВалютеДоговораПоРискуДожития4Года = "" Тогда 
		//	НоваяСтрокаНачислений = НовыйДоговор.скГрафикНачислений.Добавить();
		//	НоваяСтрокаНачислений.Контрагент = Строка.Страхователь;
		//	НоваяСтрокаНачислений.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
		//	НоваяСтрокаНачислений.ДатаНачисления = Дата(Сред(Строка.ДатаДожития4Года,7,4)+Сред(Строка.ДатаДожития4Года,4,2)+ЛЕВ(Строка.ДатаДожития4Года,2));
		//	НоваяСтрокаНачислений.Сумма = Строка.ССВВалютеДоговораПоРискуДожития4Года;
		//КонецЕсли;
		//
		//Если НЕ Строка.ССВВалютеДоговораПоРискуДожития5Лет = "" Тогда 
		//	НоваяСтрокаНачислений = НовыйДоговор.скГрафикНачислений.Добавить();
		//	НоваяСтрокаНачислений.Контрагент = Строка.Страхователь;
		//	НоваяСтрокаНачислений.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
		//	НоваяСтрокаНачислений.ДатаНачисления = Дата(Сред(Строка.ДатаДожития5Лет,7,4)+Сред(Строка.ДатаДожития5Лет,4,2)+ЛЕВ(Строка.ДатаДожития5Лет,2));
		//	НоваяСтрокаНачислений.Сумма = Строка.ССВВалютеДоговораПоРискуДожития5Лет;
		//КонецЕсли;

		//Если НЕ Строка.ССВВалютеДоговораПоРискуДожития6Лет = "" Тогда 
		//	НоваяСтрокаНачислений = НовыйДоговор.скГрафикНачислений.Добавить();
		//	НоваяСтрокаНачислений.Контрагент = Строка.Страхователь;
		//	НоваяСтрокаНачислений.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
		//	НоваяСтрокаНачислений.ДатаНачисления = Дата(Сред(Строка.ДатаДожития6Лет,7,4)+Сред(Строка.ДатаДожития6Лет,4,2)+ЛЕВ(Строка.ДатаДожития6Лет,2));
		//	НоваяСтрокаНачислений.Сумма = Строка.ССВВалютеДоговораПоРискуДожития6Лет;
		//КонецЕсли;

		//Если НЕ Строка.ССВВалютеДоговораПоРискуДожития7Лет = "" Тогда 
		//	НоваяСтрокаНачислений = НовыйДоговор.скГрафикНачислений.Добавить();
		//	НоваяСтрокаНачислений.Контрагент = Строка.Страхователь;
		//	НоваяСтрокаНачислений.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
		//	НоваяСтрокаНачислений.ДатаНачисления = Дата(Сред(Строка.ДатаДожития7Лет,7,4)+Сред(Строка.ДатаДожития7Лет,4,2)+ЛЕВ(Строка.ДатаДожития7Лет,2));
		//	НоваяСтрокаНачислений.Сумма = Строка.ССВВалютеДоговораПоРискуДожития7Лет;
		//КонецЕсли;

		//Если НЕ Строка.ССВВалютеДоговораПоРискуДожития8Лет = "" Тогда 
		//	НоваяСтрокаНачислений = НовыйДоговор.скГрафикНачислений.Добавить();
		//	НоваяСтрокаНачислений.Контрагент = Строка.Страхователь;
		//	НоваяСтрокаНачислений.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
		//	НоваяСтрокаНачислений.ДатаНачисления = Дата(Сред(Строка.ДатаДожития8Лет,7,4)+Сред(Строка.ДатаДожития8Лет,4,2)+ЛЕВ(Строка.ДатаДожития8Лет,2));
		//	НоваяСтрокаНачислений.Сумма = Строка.ССВВалютеДоговораПоРискуДожития8Лет;
		//КонецЕсли;

		//Если НЕ Строка.ССВВалютеДоговораПоРискуДожития9Лет = "" Тогда 
		//	НоваяСтрокаНачислений = НовыйДоговор.скГрафикНачислений.Добавить();
		//	НоваяСтрокаНачислений.Контрагент = Строка.Страхователь;
		//	НоваяСтрокаНачислений.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
		//	НоваяСтрокаНачислений.ДатаНачисления = Дата(Сред(Строка.ДатаДожития9Лет,7,4)+Сред(Строка.ДатаДожития9Лет,4,2)+ЛЕВ(Строка.ДатаДожития9Лет,2));
		//	НоваяСтрокаНачислений.Сумма = Строка.ССВВалютеДоговораПоРискуДожития9Лет;
		//КонецЕсли;
		//	
		//Если НЕ Строка.ССВВалютеДоговораПоРискуДожития10Лет = "" Тогда 
		//	НоваяСтрокаНачислений = НовыйДоговор.скГрафикНачислений.Добавить();
		//	НоваяСтрокаНачислений.Контрагент = Строка.Страхователь;
		//	НоваяСтрокаНачислений.СтраховойРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию("Дожитие до даты");
		//	НоваяСтрокаНачислений.ДатаНачисления = Дата(Сред(Строка.ДатаДожития10Лет,7,4)+Сред(Строка.ДатаДожития10Лет,4,2)+ЛЕВ(Строка.ДатаДожития10Лет,2));
		//	НоваяСтрокаНачислений.Сумма = Строка.ССВВалютеДоговораПоРискуДожития10Лет;
		//КонецЕсли;
		
		Если НЕ Строка.ВыгодоприобретательДожитие = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка") Тогда
			Для Каждого Элемент Из СписокЭлементарныхРисков Цикл
				Если Найти(Элемент.Значение, "Дожитие") > 0 Тогда
					НовыйВыгодоприобретатель = НовыйДоговор.Выгодоприобретатели.Добавить();
					НовыйВыгодоприобретатель.Контрагент = Строка.ВыгодоприобретательДожитие;
					НовыйВыгодоприобретатель.Риск = Справочники.скСтраховыеРиски.НайтиПоНаименованию(Элемент.Значение);
					НовыйВыгодоприобретатель.Застрахованный = Строка.Застрахованный;
					НовыйВыгодоприобретатель.Доля = Строка.ДоляВП1Дожитие;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Контрагент", Строка.Выгодоприобретатель1СЛП);
		ПараметрыОтбора.Вставить("Застрахованный", Строка.Застрахованный);
		
		НайденныеСтроки = НовыйДоговор.Выгодоприобретатели.НайтиСтроки(ПараметрыОтбора);
		
		Если НЕ Строка.Выгодоприобретатель1СЛП = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка") И НайденныеСтроки.Количество() = 0 Тогда
			Для Каждого Элемент Из СписокЭлементарныхРисков Цикл
				Если Найти(Элемент.Значение, "Смерть") > 0 Тогда
					НовыйВыгодоприобретатель = НовыйДоговор.Выгодоприобретатели.Добавить();
					НовыйВыгодоприобретатель.Контрагент = Строка.Выгодоприобретатель1СЛП;
					НовыйВыгодоприобретатель.Риск = Справочники.скСтраховыеРиски.НайтиПоНаименованию(Элемент.Значение);
					НовыйВыгодоприобретатель.Застрахованный = Строка.Застрахованный;
					НовыйВыгодоприобретатель.Доля = Строка.ДоляВП1СЛП;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Контрагент", Строка.Выгодоприобретатель2СЛП);
		ПараметрыОтбора.Вставить("Застрахованный", Строка.Застрахованный);
		
		НайденныеСтроки = НовыйДоговор.Выгодоприобретатели.НайтиСтроки(ПараметрыОтбора);
		
		Если НЕ Строка.Выгодоприобретатель2СЛП = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка") И НайденныеСтроки.Количество() = 0 Тогда
			Для Каждого Элемент Из СписокЭлементарныхРисков Цикл
				Если Найти(Элемент.Значение, "Смерть") > 0 Тогда
					НовыйВыгодоприобретатель = НовыйДоговор.Выгодоприобретатели.Добавить();
					НовыйВыгодоприобретатель.Контрагент = Строка.Выгодоприобретатель2СЛП;
					НовыйВыгодоприобретатель.Риск = Справочники.скСтраховыеРиски.НайтиПоНаименованию(Элемент.Значение);
					НовыйВыгодоприобретатель.Застрахованный = Строка.Застрахованный;
					НовыйВыгодоприобретатель.Доля = Строка.ДоляВП2СЛП;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Контрагент", Строка.Выгодоприобретатель3СЛП);
		ПараметрыОтбора.Вставить("Застрахованный", Строка.Застрахованный);
		
		НайденныеСтроки = НовыйДоговор.Выгодоприобретатели.НайтиСтроки(ПараметрыОтбора);
		
		Если НЕ Строка.Выгодоприобретатель3СЛП = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка") И НайденныеСтроки.Количество() = 0 Тогда
			Для Каждого Элемент Из СписокЭлементарныхРисков Цикл
				Если Найти(Элемент.Значение, "Смерть") > 0 Тогда
					НовыйВыгодоприобретатель = НовыйДоговор.Выгодоприобретатели.Добавить();
					НовыйВыгодоприобретатель.Контрагент = Строка.Выгодоприобретатель3СЛП;
					НовыйВыгодоприобретатель.Риск = Справочники.скСтраховыеРиски.НайтиПоНаименованию(Элемент.Значение);
					НовыйВыгодоприобретатель.Застрахованный = Строка.Застрахованный;
					НовыйВыгодоприобретатель.Доля = Строка.ДоляВП3СЛП;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Контрагент", Строка.Выгодоприобретатель4СЛП);
		ПараметрыОтбора.Вставить("Застрахованный", Строка.Застрахованный);
		
		НайденныеСтроки = НовыйДоговор.Выгодоприобретатели.НайтиСтроки(ПараметрыОтбора);
		
		Если НЕ Строка.Выгодоприобретатель4СЛП = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка") И НайденныеСтроки.Количество() = 0 Тогда
			Для Каждого Элемент Из СписокЭлементарныхРисков Цикл
				Если Найти(Элемент.Значение, "Смерть") > 0 Тогда
					НовыйВыгодоприобретатель = НовыйДоговор.Выгодоприобретатели.Добавить();
					НовыйВыгодоприобретатель.Контрагент = Строка.Выгодоприобретатель4СЛП;
					НовыйВыгодоприобретатель.Риск = Справочники.скСтраховыеРиски.НайтиПоНаименованию(Элемент.Значение);
					НовыйВыгодоприобретатель.Застрахованный = Строка.Застрахованный;
					НовыйВыгодоприобретатель.Доля = Строка.ДоляВП4СЛП;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Контрагент", Строка.Выгодоприобретатель5СЛП);
		ПараметрыОтбора.Вставить("Застрахованный", Строка.Застрахованный);
		
		НайденныеСтроки = НовыйДоговор.Выгодоприобретатели.НайтиСтроки(ПараметрыОтбора);
		
		Если НЕ Строка.Выгодоприобретатель5СЛП = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка") И НайденныеСтроки.Количество() = 0 Тогда
			Для Каждого Элемент Из СписокЭлементарныхРисков Цикл
				Если Найти(Элемент.Значение, "Смерть") > 0 Тогда
					НовыйВыгодоприобретатель = НовыйДоговор.Выгодоприобретатели.Добавить();
					НовыйВыгодоприобретатель.Контрагент = Строка.Выгодоприобретатель5СЛП;
					НовыйВыгодоприобретатель.Риск = Справочники.скСтраховыеРиски.НайтиПоНаименованию(Элемент.Значение);
					НовыйВыгодоприобретатель.Застрахованный = Строка.Застрахованный;
					НовыйВыгодоприобретатель.Доля = Строка.ДоляВП5СЛП;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		НовыйДоговор.ИСЖ_Стратегия = Справочники.скИнвестиционныеСтратегии.НайтиПоНаименованию(Строка.СтратегияИнвестирования+" - "+СтрЗаменить(Строка.ВеличинаИнвестиционногоКупона,",","."));
		НовыйДоговор.рсхб_КоэффициентУчастия = Строка.ВеличинаИнвестиционногоКупона;
		
		Если НовыйДоговор.ИСЖ_Стратегия = ПредопределенноеЗначение("Справочник.скИнвестиционныеСтратегии.ПустаяСсылка") Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Стратегия инвестирования """+Строка.СтратегияИнвестирования+""" для строки "+НомерСтроки+" в базе не найдена!");
		КонецЕсли;
		
		//НовыйДоговор.рсхб_КоэффициентУчастия = Строка.КоэффициентУчастия1;
		
		НовыйДоговор.Ответственный = Справочники.Пользователи.НайтиПоНаименованию(Строка.ФИООформившегоСотрудника);
		Если НовыйДоговор.Ответственный = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка") Тогда
			НовыйДоговор.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		КонецЕсли;
	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	рсхб_СтруктураВнешнейАгентскойСетиСрезПоследних.РФ КАК РФ,
		               |	рсхб_СтруктураВнешнейАгентскойСетиСрезПоследних.ВСП КАК ВСП,
					   |	рсхб_СтруктураВнешнейАгентскойСетиСрезПоследних.ВСП.Наименование КАК ВСПНаименование
		               |ИЗ
		               |	РегистрСведений.рсхб_СтруктураВнешнейАгентскойСети.СрезПоследних({(&Период)}, ) КАК рсхб_СтруктураВнешнейАгентскойСетиСрезПоследних";
		Запрос.УстановитьПараметр("Период", ТекущаяДата());
		
		Результат = Запрос.Выполнить().Выгрузить();
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ВСПНаименование", "ВСП "+Строка.ВСП);
		НайденныеСтроки = Результат.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() > 0 Тогда				
			НовыйДоговор.рсхб_ВСП = НайденныеСтроки[0].ВСП;
		КонецЕсли;
		Если НовыйДоговор.рсхб_ВСП = ПредопределенноеЗначение("Справочник.рсхб_РФиВСП.ПустаяСсылка") Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ВСП """+Строка.ВСП+""" для строки "+НомерСтроки+" в базе не найден!");
		КонецЕсли;
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			НовыйДоговор.рсхб_РегиональныйФилиал = НайденныеСтроки[0].РФ;
		КонецЕсли;
		Если НовыйДоговор.рсхб_РегиональныйФилиал = ПредопределенноеЗначение("Справочник.рсхб_РФиВСП.ПустаяСсылка") Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Филиал """+Строка.Филиал+""" для строки "+НомерСтроки+" в базе не найден!");
		КонецЕсли;
		
		НовыйПосредник = НовыйДоговор.Посредники.Добавить();
		НовыйПосредник.Контрагент = НовыйДоговор.Продавец;
		//Для Каждого Строка Из СписокЭлементарныхРисков Цикл
		//	НовыйДоговор.Посредники.Добавить();
		//	НовыйПосредник.скСтарыйРиск = Справочники.скСтраховыеРиски.НайтиПоНаименованию(Строка.Значение);
		//	НовыйПосредник.скКомиссия = 1;
		//КонецЦикла;
		
		Результат = "000001";
	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	МАКСИМУМ(скДСП.юж_НомерЗаявления) КАК юж_НомерЗаявления
		|ИЗ
		|	Документ.скДСП КАК скДСП";
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Попытка
				Результат = Формат(Число(Выборка.юж_НомерЗаявления) + 1, "ЧЦ=6; ЧВН=; ЧГ=0");
			Исключение
			КонецПопытки;	
		КонецЕсли;	
		
		НовыйДоговор.юж_НомерЗаявления = Результат;
		
		НовыйДоговор.Записать(РежимЗаписиДокумента.Проведение);	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Создан договор """+НовыйДоговор.Ссылка+"""!");
		
		НомерСтроки = НомерСтроки + 1;
		
		ЗаполнитьКонтрагентов(Строка);
	КонецЦикла;

КонецПроцедуры
